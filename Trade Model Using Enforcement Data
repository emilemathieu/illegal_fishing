####New trade model, with just one step, instead of two
###Updated 5 January 2020
###Update: adding a prior on efficacy rather than enforcement, and using enforcement data

###Packages needed for model####
library(truncnorm)
library(ggplot2)
library(patchwork)
library(performance)
library(see)
library(plotly)
library(plyr)
library(DescTools)

####Data and Priors#####
landingsdata <- read.csv('~/OneDrive - Nexus365/Chapter 4/LandingsYear.csv')
EnforDATA <- read.csv("~/OneDrive - Nexus365/Chapter 4/enfcomnocom.csv")

iterations=100000 ##1000K takes XX 1.1 hours, 100K takes 6.5 min, 10K takes 45 sec, 
####"Data"
weeks= 49####Weeks in a normal year excluding September
totalmeanlandings=(sum(landingsdata$mean)) ### mean total landings in boxes for period

cost=500    ##Aprox per box but doesn't really matter
fb=9.2e+05  ## fine expected per box, from chilean law
visa=3000   ##Constant value for the year, except in the end
c_max=15000 ##Max cost per box, then depending on landings and elasticities it goes down
p_max=30000 ##Max cost per box, then depending on landings and elasticities it goes down


####PRIORs for unknown parameters: price premium, detectability, landings, and visa "factor"
###
####PRIOR range for price premium parameter (value that traders receive for a legal unit)
beta_min=0   ### price premium lower limit
beta_mean=1500
beta_max=3000 ###price premium higher limit, otherwise it goes over visa en then optimal is all legal

####PRIOR range for landings (total units landed each year, considering legal and illegal)
T_min=(totalmeanlandings/weeks)*3     ## landings lower limit: 3X the legal quota is from one of our papers
T_max=(totalmeanlandings/weeks)*8.4    ##landings higher limit: 8.4X from our paper as well
T_mean=(T_min+T_max)/2
##Reference quantity for max prices/cost
qr=min(T_min)

####PRIOR range for EFFICIENCY (probability of detection per unit)
enforcement=as.data.frame((EnforDATA[,3]))  ####Enforcement activities mean per week
theta_min=(p_max-c_max-(p_max+beta_mean)+(c_max+visa))/(((T_mean*0.88)*(p_max+beta_mean))+fb) / max(enforcement$`(EnforDATA[, 3])`)  ###This calculates the theta that would result in a x_i/x_T ratio of 0.88...which is the max ratio from landings prior (both are divided by the max enforcement effort)
theta_max=(p_max-c_max-(p_max+beta_mean)+(c_max+visa))/(((T_mean*0.67)*(p_max+beta_mean))+fb) / max(enforcement$`(EnforDATA[, 3])`)  ###This calculates the theta that would result in a x_i/x_T ratio of 0.67...which is the minimum ratio from landings prior

###Prior  range for elasticities, this comes from our paper
E_mean=0.47
E_min=0.47-0.23
E_max=0.47+0.23

###Prior range for VisaEnd (this is a "elasticity" that models how much the visa cost goes down at the end of the year wrt to quota left). I have no data for these ranges, I just added a big range
visaend_min=0.1
visaend_max=0.9
visaend_mean=0.45

####This creates the priors based on the ranges above
beta_P=rtruncnorm(n=iterations,   a=beta_min,  b=beta_max, mean=(beta_mean),  sd=100000)
theta_P = rtruncnorm(n=iterations, a=theta_min,  b=theta_max, mean=((theta_min+theta_max)/2), sd=1)
T_I=rtruncnorm(n=iterations,   a=T_min,  b=T_max, mean=((T_mean)),  sd=10000000)
Elasticities_P=rtruncnorm(n=iterations,   a=E_min,  b=E_max, mean=((E_mean)),  sd=1)
VisaEnd_P=rtruncnorm(n=iterations,   a=visaend_min,  b=visaend_max, mean=((visaend_mean)),  sd=100)

###Track time it takes to run
start_time <- Sys.time()
start_time

#####Model#####
results=matrix(0,iterations,15)
legallandings=matrix(0,weeks,iterations)
illegallandings=matrix(0,weeks,iterations)

for (simulation in 1:iterations) ### Start iterations
{
  ###Sample each parameter 
  beta=sample(beta_P,1)
  theta=sample(theta_P,1)
  Elast=-(sample(Elasticities_P,1))
  ve=(sample(VisaEnd_P,1))

  Data=matrix(0,weeks,7)
  
  for (t in 1:weeks) ###Run time iterations
  {
  
  THETA=theta*enforcement[t,1] ###here I use the enforcement data
  x_T=sample(T_I,1)

  ###Calculates quota left for end of year and "new" value of visa (for now I am using total landings instead of quota)
  quotaleft=(totalmeanlandings-sum(Data[,1]))
  quotaleftR=if(quotaleft>0){quotaleft} else 0
  visaqf=(visa * (1-((ve*((totalmeanlandings-quotaleftR)/totalmeanlandings)))))
    
  #Calculates prices and costs
  C_L=   (c_max *  (1-((Elast*((qr-x_T)/qr))))) +   if(t >43) {visaqf} else  visa            #Here, I add elasticity of demand at the port for legal, based on previos and current catch
  C_I=   (c_max *  (1-((Elast*((qr-x_T)/qr))))) #Here, I add elasticity of demand at the port for illegal, based wrt landings
  
  P_L=   (p_max  * (1-((Elast*((qr-x_T)/qr))))) + beta
  P_I=   (p_max  * (1-((Elast*((qr-x_T)/qr))))) #same for illegal 
  
  ###Calculates x_l and x_i (with constraint that x_l cannot be higher than x_T, or lower than 10% of x_T)
  x_l=x_T-((((P_I-C_I-P_L+C_L-(fb*  THETA))/(8*  THETA*(P_L))))) ##legal units
  x_l=if(x_l<=x_T) {x_l} else {x_T}
  x_l=if(x_l<=x_T*0.1) {x_T*0.1} else {x_l}
  x_i=x_T-x_l
  
  #Calculates profit
  totalprofit=(x_i*P_I-C_I)- ((  THETA* x_i)*(4*P_L*x_i+fb)) + (x_l*(P_L-C_L))- ((x_T)*cost)
  
  Data[t,1]=x_l
  Data[t,2]=x_i
  Data[t,3]=C_L
  Data[t,4]=C_I
  Data[t,5]=P_L
  Data[t,6]=P_I
  Data[t,7]=totalprofit
  
  }
  
  legallandings[,simulation]=Data[,1]
  illegallandings[,simulation]=Data[,2]
    
  results[simulation,1]=sum(Data[,1])
  results[simulation,2]=sum(Data[,2])
  results[simulation,3]=sum(Data[,1])+sum(Data[,2])
  results[simulation,4]=beta
  results[simulation,5]=theta
  results[simulation,7]=Elast
  results[simulation,8]=mean((Data[,3]))
  results[simulation,9]=mean((Data[,4]))
  results[simulation,10]=mean((Data[,5]))
  results[simulation,11]=mean((Data[,6]))
  results[simulation,12]=((sum(Data[,1])-(totalmeanlandings))/(totalmeanlandings))*100
  results[simulation,13]=sum(Data[,2])/(sum(Data[,1])+sum(Data[,2]))
  results[simulation,14]=simulation
  results[simulation,15]=ve


}

end_time <- Sys.time()
end_time - start_time

#####Plots####
###Filters those simulations that are +- 10% of totalmeanlandings
cut=10 
Results=data.frame(results)
ResultsFilter1=subset(Results,Results$X1>0)
ResultsFilter2=subset(ResultsFilter1,ResultsFilter1$X2>0)
DataFinal=subset(ResultsFilter2, ResultsFilter2$X12>-cut & ResultsFilter2$X12<cut)

##This selects the simulations that were used (to obtain weekly values)
PassedSims=DataFinal[,14]
PassedLegs=legallandings[,c(PassedSims)]
PassedIlls=illegallandings[,c(PassedSims)]

Legalboxes=DataFinal$X1
Illegalboxes=DataFinal$X2
Landingsboxes=DataFinal$X3
Beta=DataFinal$X4
Theta=DataFinal$X5
Elasticity=DataFinal$X7
CostLegal=DataFinal$X8
CostIllegal=DataFinal$X9
PriceLegal=DataFinal$X10
PriceIllegal=DataFinal$X11
Percent=DataFinal$X12
Ratio=DataFinal$X13
VisaEndofyear=DataFinal$X15

old.par <- par(mfrow=c(2, 3))
DDetIn=density(Theta, n=iterations, adjust=3, from=theta_min, to=theta_max)
yDetecIN=DDetIn$y
xDetecIN=DDetIn$x
p1=plot(xDetecIN,yDetecIN, type="l",xlab="Theta",ylab="Probability Density")

DDetIn=density(Beta, n=iterations, adjust=3, from=beta_min, to=beta_max)
yDetecIN=DDetIn$y
xDetecIN=DDetIn$x
p2=plot(xDetecIN,yDetecIN, type="l",xlab="Beta",ylab="Probability Density")

DDetIn=density(-Elasticity, n=iterations, adjust=3, from=E_min, to=E_max)
yDetecIN=DDetIn$y
xDetecIN=DDetIn$x
p3=plot(xDetecIN,yDetecIN, type="l",xlab="Elasticity",ylab="Probability Density")

DDetIn=density(VisaEndofyear, n=iterations, adjust=3,  from=visaend_min, to=visaend_max)
yDetecIN=DDetIn$y
xDetecIN=DDetIn$x
p4=plot(xDetecIN,yDetecIN, type="l",xlab="Visa End of year Elasticity",ylab="Probability Density")

DDetIn=density(Landingsboxes, n=iterations, adjust=3)
yDetecIN=DDetIn$y
xDetecIN=DDetIn$x
p5=plot(xDetecIN,yDetecIN, type="l",xlab="Total Landings in boxes",ylab="Probability Density")

DDetIn=density(Ratio, n=iterations, adjust=3)
yDetecIN=DDetIn$y
xDetecIN=DDetIn$x
p6=plot(xDetecIN,yDetecIN, type="l",xlab="Ratio",ylab="Probability Density")



######Graph over time#####
LandingsMean=transform(PassedLegs, MEAN=apply(PassedLegs,1, mean, na.rm = TRUE))
IllegalMean=transform(PassedIlls, MEAN=apply(PassedIlls,1, mean, na.rm = TRUE))
LandingsSD=transform(PassedLegs, SD=apply(PassedLegs,1, sd, na.rm = TRUE))
IllegalSD=transform(PassedIlls, SD=apply(PassedIlls,1, sd, na.rm = TRUE))

###Create data frame with landings data, mean and SD
Plot=matrix(0,weeks,9)
Plot[,1]=landingsdata$mean
Plot[,2]=landingsdata$mean_p_std
Plot[,3]=landingsdata$mean_m_std

###Calculate means and SD for simulations Legal
Plot[,4]=LandingsMean$MEAN
Plot[,5]=LandingsMean$MEAN+LandingsSD$SD
Plot[,6]=LandingsMean$MEAN-LandingsSD$SD

###Calculate means and SD for simulations illegal
Plot[,7]=IllegalMean$MEAN
Plot[,8]=IllegalMean$MEAN+IllegalSD$SD
Plot[,9]=IllegalMean$MEAN-IllegalSD$SD
Plot=as.data.frame(Plot)
boxtoton=27/1000

###Graph
##Data
fig <- plot_ly(Plot, x = ~seq(1:weeks), y = ~Plot$V4*boxtoton, type = 'scatter', mode = 'lines',
               line = list(color='rgb(0,100,80)'),
               name = 'Legal Simulations Mean +/-SD') 
fig <- fig %>% add_trace(y = ~Plot$V5*boxtoton, type = 'scatter', mode = 'lines',
                         line = list(color = 'transparent'), name = 'High Landings',showlegend = FALSE) 

fig <- fig %>% add_trace(y = ~Plot$V6*boxtoton, type = 'scatter', mode = 'lines',
                         fill = 'tonexty', fillcolor='rgba(0,100,80,0.2)', line = list(color = 'transparent'),
                         showlegend = FALSE, name = 'Low Landings')

##Legal sims
fig <- fig%>% add_trace(Plot, x = ~seq(1:weeks), y = ~Plot$V2*boxtoton, type = 'scatter', mode = 'lines',
                        line = list(color = 'transparent'),
                        showlegend = FALSE, name = 'High Landings') 
fig <- fig %>% add_trace(y = ~Plot$V3*boxtoton, type = 'scatter', mode = 'lines',
                         fill = 'tonexty', fillcolor='rgba(0,17,157,0.2)', line = list(color = 'transparent'),
                         showlegend = FALSE, name = 'Low Landings')
fig <- fig %>% add_trace(y = ~Plot$V1*boxtoton, type = 'scatter', mode = 'lines',
                         line = list(color='blue'),
                         name = 'Legal Landings Mean +/-SD') 


##Illegal sims
#fig <- fig%>% add_trace(Plot, x = ~seq(1:weeks), y = ~Plot$V8*boxtoton, type = 'scatter', mode = 'lines',line = list(color = 'transparent'),showlegend = FALSE, name = 'High Landings') 
#fig <- fig %>% add_trace(y = ~Plot$V9*boxtoton, type = 'scatter', mode = 'lines',fill = 'tonexty', fillcolor='rgba(220,20,60,0.2)', line = list(color = 'transparent'),showlegend = FALSE, name = 'Low Landings')
#fig <- fig %>% add_trace(y = ~Plot$V7*boxtoton, type = 'scatter', mode = 'lines',line = list(color='red'),name = 'Illegal Simulation Mean +/-SD') 
##Illegal

fig <- fig %>% layout(yaxis = list(range = c(0,170)))
fig <- fig %>% layout(showlegend = TRUE)
fig <- fig %>% layout(xaxis = list(title = "Week"))
fig <- fig %>% layout(legend = list(x =0.5, y = 1.1))
fig <- fig %>% layout(yaxis = list(title = "Ton"))
fig




